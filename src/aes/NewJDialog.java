/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aes;


import aes.Enums.Kompetens;
import aes.Enums.PersonalInstallation;
import aes.Enums.PersonalNetwork;
import aes.Enums.PersonalSecurity;
import aes.Enums.PersonalUsers;
import aes.Enums.Status;

import java.awt.HeadlessException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author wallejr
 */
public class NewJDialog extends javax.swing.JDialog
{
   // private CaseFactory caseCreator = new CaseFactory();

    
    private String userName;
    private String fullName;
    private String avdelning;
    private String phoneNr;
    private int caseID;
    private Case caset;
    
    
    /**
     * Creates new form NewJDialog
     */
    public NewJDialog(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
        initGUI();
    }
    
    

    private NewJDialog()
    {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    //Meton som andropas från konstruktor och nollställer värden
    private void initGUI()
    {
        setLocationRelativeTo(null);
        
        txtCaseIdNr.setText(null);
        txtComments.setText(null);
        txtFieldAvd.setText(null);
        txtComputerName.setText(null);
        txtCreateDate.setText(null);
        txtDescription.setText(null);
        txtFieldCreatedBy.setText(null);
        txtFullName.setText(null);
        txtphone.setText(null);
        txtsolution.setText(null);
        txtTitle.setText(null);
        txtTimeChanged.setText(null);
        txtUserName.setText(null);
        comboCategory.setModel(new DefaultComboBoxModel<>(Kompetens.values()));
        comboStatus.setModel(new DefaultComboBoxModel<>(Status.values()));
        
        updateAssignedList();
    }
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        panelCaseProperties = new javax.swing.JPanel();
        lblCaseId = new javax.swing.JLabel();
        txtCaseIdNr = new javax.swing.JTextField();
        lblCategory = new javax.swing.JLabel();
        comboCategory = new javax.swing.JComboBox();
        comboStatus = new javax.swing.JComboBox();
        lblStatus = new javax.swing.JLabel();
        lblAssignedTo = new javax.swing.JLabel();
        comboAssigned = new javax.swing.JComboBox();
        lblCreated = new javax.swing.JLabel();
        txtCreateDate = new javax.swing.JTextField();
        lblChanged = new javax.swing.JLabel();
        txtTimeChanged = new javax.swing.JTextField();
        panelRequesterInfo = new javax.swing.JPanel();
        lblUsername = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblPhone = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        txtFullName = new javax.swing.JTextField();
        txtphone = new javax.swing.JTextField();
        lblDepartment = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblComputerName = new javax.swing.JLabel();
        txtComputerName = new javax.swing.JTextField();
        comboBoxCity = new javax.swing.JComboBox();
        txtFieldAvd = new javax.swing.JTextField();
        lblCreatedBy = new javax.swing.JLabel();
        txtFieldCreatedBy = new javax.swing.JTextField();
        panelCaseRequest = new javax.swing.JPanel();
        txtTitle = new javax.swing.JTextField();
        lblTitle1 = new javax.swing.JLabel();
        paneltextAreDesc = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        panelWorkTask = new javax.swing.JPanel();
        workTaskList = new javax.swing.JScrollPane();
        listWorkTask = new javax.swing.JList();
        panelComments = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtComments = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        panelTimeInfo = new javax.swing.JPanel();
        lblprefTime = new javax.swing.JLabel();
        txtFieldprelTime = new javax.swing.JTextField();
        lblPrefhours = new javax.swing.JLabel();
        lblTimeTaken = new javax.swing.JLabel();
        txtFieldTimeTaken = new javax.swing.JTextField();
        lblTakenHours = new javax.swing.JLabel();
        panelSolution = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtsolution = new javax.swing.JTextArea();
        panelSaveAndClose = new javax.swing.JPanel();
        btnSaveCase = new javax.swing.JButton();
        btnCloseCaseWindow = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelCaseProperties.setBackground(new java.awt.Color(219, 219, 219));
        panelCaseProperties.setBorder(javax.swing.BorderFactory.createTitledBorder("Case Properties"));

        lblCaseId.setText("CaseID:");

        txtCaseIdNr.setEditable(false);
        txtCaseIdNr.setBackground(new java.awt.Color(153, 153, 153));
        txtCaseIdNr.setText("case0000322");

        lblCategory.setText("Category:");

        comboCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Network" }));
        comboCategory.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                comboCategoryItemStateChanged(evt);
            }
        });

        comboStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Assigned" }));

        lblStatus.setText("Status:");

        lblAssignedTo.setText("Assigned to:");

        lblCreated.setText("Created:");

        txtCreateDate.setEditable(false);
        txtCreateDate.setBackground(new java.awt.Color(153, 153, 153));
        txtCreateDate.setText("2015-05-03; 13:58");

        lblChanged.setText("Changed:");

        txtTimeChanged.setEditable(false);
        txtTimeChanged.setBackground(new java.awt.Color(153, 153, 153));
        txtTimeChanged.setText("2015-05-04; 09:23");
        txtTimeChanged.setRequestFocusEnabled(false);

        panelRequesterInfo.setBackground(new java.awt.Color(219, 219, 219));
        panelRequesterInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Requester Information"));

        lblUsername.setText("Username:");
        lblUsername.setToolTipText("");

        lblName.setText("Full Name:");
        lblName.setToolTipText("");

        lblPhone.setText("Phone:");

        txtUserName.setText("katgus");

        txtFullName.setText("Katarina Gustavsson");

        txtphone.setText("+46712345678");

        lblDepartment.setText("Department:");

        lblCity.setText("City:");

        lblComputerName.setText("Computername:");

        txtComputerName.setText("klom-t3424");

        comboBoxCity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Berlin" }));

        txtFieldAvd.setText("Finance");

        javax.swing.GroupLayout panelRequesterInfoLayout = new javax.swing.GroupLayout(panelRequesterInfo);
        panelRequesterInfo.setLayout(panelRequesterInfoLayout);
        panelRequesterInfoLayout.setHorizontalGroup(
            panelRequesterInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRequesterInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRequesterInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRequesterInfoLayout.createSequentialGroup()
                        .addComponent(lblUsername)
                        .addGap(18, 18, 18)
                        .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRequesterInfoLayout.createSequentialGroup()
                        .addGroup(panelRequesterInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName)
                            .addComponent(lblPhone))
                        .addGap(18, 18, 18)
                        .addGroup(panelRequesterInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFullName, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(txtphone))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(panelRequesterInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRequesterInfoLayout.createSequentialGroup()
                        .addComponent(lblComputerName)
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRequesterInfoLayout.createSequentialGroup()
                        .addComponent(lblCity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRequesterInfoLayout.createSequentialGroup()
                        .addComponent(lblDepartment)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(panelRequesterInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFieldAvd)
                    .addComponent(comboBoxCity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtComputerName, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelRequesterInfoLayout.setVerticalGroup(
            panelRequesterInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRequesterInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRequesterInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDepartment)
                    .addComponent(txtFieldAvd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelRequesterInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCity)
                    .addComponent(comboBoxCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelRequesterInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhone)
                    .addComponent(txtphone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblComputerName)
                    .addComponent(txtComputerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        lblCreatedBy.setText("Created By:");

        txtFieldCreatedBy.setBackground(new java.awt.Color(153, 153, 153));
        txtFieldCreatedBy.setText("jTextField4");

        javax.swing.GroupLayout panelCasePropertiesLayout = new javax.swing.GroupLayout(panelCaseProperties);
        panelCaseProperties.setLayout(panelCasePropertiesLayout);
        panelCasePropertiesLayout.setHorizontalGroup(
            panelCasePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCasePropertiesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCaseId)
                .addGap(18, 18, 18)
                .addComponent(txtCaseIdNr, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(lblCreated)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCreateDate, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblChanged)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTimeChanged, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(panelCasePropertiesLayout.createSequentialGroup()
                .addGroup(panelCasePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCasePropertiesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelRequesterInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(238, 238, 238))
                    .addGroup(panelCasePropertiesLayout.createSequentialGroup()
                        .addComponent(lblCategory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(panelCasePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelCasePropertiesLayout.createSequentialGroup()
                        .addComponent(lblAssignedTo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboAssigned, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelCasePropertiesLayout.createSequentialGroup()
                        .addGroup(panelCasePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblStatus)
                            .addComponent(lblCreatedBy))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelCasePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtFieldCreatedBy, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        panelCasePropertiesLayout.setVerticalGroup(
            panelCasePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCasePropertiesLayout.createSequentialGroup()
                .addGroup(panelCasePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCasePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCaseIdNr, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblCaseId)
                        .addComponent(lblCreated)
                        .addComponent(txtCreateDate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblChanged)
                        .addComponent(txtTimeChanged, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCasePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblStatus)
                        .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCasePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategory)
                    .addComponent(comboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreatedBy)
                    .addComponent(txtFieldCreatedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCasePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCasePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboAssigned, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblAssignedTo))
                    .addComponent(panelRequesterInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        panelCaseRequest.setBackground(new java.awt.Color(219, 219, 219));
        panelCaseRequest.setBorder(javax.swing.BorderFactory.createTitledBorder("Case Description"));

        txtTitle.setText("Can't connect to www.ltu.se");

        lblTitle1.setText("Title:");

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        txtDescription.setText("I can't connect to http://www.ltu.se no matter what I do. \nI have been trying all day long");
        paneltextAreDesc.setViewportView(txtDescription);

        javax.swing.GroupLayout panelCaseRequestLayout = new javax.swing.GroupLayout(panelCaseRequest);
        panelCaseRequest.setLayout(panelCaseRequestLayout);
        panelCaseRequestLayout.setHorizontalGroup(
            panelCaseRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCaseRequestLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCaseRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(paneltextAreDesc, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                    .addGroup(panelCaseRequestLayout.createSequentialGroup()
                        .addComponent(lblTitle1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTitle)))
                .addContainerGap())
        );
        panelCaseRequestLayout.setVerticalGroup(
            panelCaseRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCaseRequestLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(panelCaseRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle1)
                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(paneltextAreDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panelWorkTask.setBackground(new java.awt.Color(219, 219, 219));
        panelWorkTask.setBorder(javax.swing.BorderFactory.createTitledBorder("Worktask"));

        listWorkTask.setBackground(new java.awt.Color(153, 153, 153));
        listWorkTask.setModel(new javax.swing.AbstractListModel()
        {
            String[] strings = { "1. Ask if his collegues have the same issues", "2. Verify if local resources is accisable", "2. Ask user to thest with network cable plugged in", "3. Ask user to restart the computer", "If above doesn't work:", "1. Connect to switch and verify uptime" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        workTaskList.setViewportView(listWorkTask);

        javax.swing.GroupLayout panelWorkTaskLayout = new javax.swing.GroupLayout(panelWorkTask);
        panelWorkTask.setLayout(panelWorkTaskLayout);
        panelWorkTaskLayout.setHorizontalGroup(
            panelWorkTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(workTaskList)
        );
        panelWorkTaskLayout.setVerticalGroup(
            panelWorkTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelWorkTaskLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(workTaskList, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelComments.setBorder(javax.swing.BorderFactory.createTitledBorder("Comments"));

        txtComments.setColumns(20);
        txtComments.setRows(5);
        txtComments.setText("Enter some comments here\n");
        jScrollPane4.setViewportView(txtComments);

        jButton1.setText("Read Comments");

        javax.swing.GroupLayout panelCommentsLayout = new javax.swing.GroupLayout(panelComments);
        panelComments.setLayout(panelCommentsLayout);
        panelCommentsLayout.setHorizontalGroup(
            panelCommentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCommentsLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        panelCommentsLayout.setVerticalGroup(
            panelCommentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCommentsLayout.createSequentialGroup()
                .addGroup(panelCommentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelCommentsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                .addContainerGap())
        );

        panelTimeInfo.setBackground(new java.awt.Color(219, 219, 219));
        panelTimeInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Time information"));
        panelTimeInfo.setPreferredSize(new java.awt.Dimension(425, 140));
        panelTimeInfo.setRequestFocusEnabled(false);

        lblprefTime.setText("Prefer time taken:");

        txtFieldprelTime.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFieldprelTime.setText("0");

        lblPrefhours.setText("hours");

        lblTimeTaken.setText("Time taken:");

        txtFieldTimeTaken.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFieldTimeTaken.setText("0");

        lblTakenHours.setText("hours");

        javax.swing.GroupLayout panelTimeInfoLayout = new javax.swing.GroupLayout(panelTimeInfo);
        panelTimeInfo.setLayout(panelTimeInfoLayout);
        panelTimeInfoLayout.setHorizontalGroup(
            panelTimeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTimeInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTimeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblprefTime)
                    .addComponent(lblTimeTaken))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTimeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFieldprelTime, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(txtFieldTimeTaken, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTimeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPrefhours)
                    .addComponent(lblTakenHours))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelTimeInfoLayout.setVerticalGroup(
            panelTimeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTimeInfoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelTimeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblprefTime)
                    .addComponent(txtFieldprelTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrefhours))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTimeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldTimeTaken, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimeTaken)
                    .addComponent(lblTakenHours)))
        );

        panelSolution.setBackground(new java.awt.Color(219, 219, 219));
        panelSolution.setBorder(javax.swing.BorderFactory.createTitledBorder("Solution"));

        txtsolution.setColumns(20);
        txtsolution.setRows(5);
        txtsolution.setText("Enter your solution here...");
        jScrollPane6.setViewportView(txtsolution);

        javax.swing.GroupLayout panelSolutionLayout = new javax.swing.GroupLayout(panelSolution);
        panelSolution.setLayout(panelSolutionLayout);
        panelSolutionLayout.setHorizontalGroup(
            panelSolutionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSolutionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelSolutionLayout.setVerticalGroup(
            panelSolutionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSolutionLayout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        panelSaveAndClose.setBackground(new java.awt.Color(219, 219, 219));
        panelSaveAndClose.setBorder(javax.swing.BorderFactory.createTitledBorder("Save and Close"));

        btnSaveCase.setText("Save Case");
        btnSaveCase.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSaveCaseActionPerformed(evt);
            }
        });

        btnCloseCaseWindow.setText("Cancel");
        btnCloseCaseWindow.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCloseCaseWindowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSaveAndCloseLayout = new javax.swing.GroupLayout(panelSaveAndClose);
        panelSaveAndClose.setLayout(panelSaveAndCloseLayout);
        panelSaveAndCloseLayout.setHorizontalGroup(
            panelSaveAndCloseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSaveAndCloseLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btnSaveCase, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCloseCaseWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panelSaveAndCloseLayout.setVerticalGroup(
            panelSaveAndCloseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSaveAndCloseLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(panelSaveAndCloseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCloseCaseWindow)
                    .addComponent(btnSaveCase)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(panelCaseRequest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(panelComments, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(panelSolution, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelWorkTask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelTimeInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                            .addComponent(panelSaveAndClose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelCaseProperties, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)))
                .addGap(91, 91, 91))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelCaseProperties, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelCaseRequest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelSolution, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelComments, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelWorkTask, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelTimeInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelSaveAndClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(156, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboCategoryItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_comboCategoryItemStateChanged
    {//GEN-HEADEREND:event_comboCategoryItemStateChanged
        updateAssignedList();
    }//GEN-LAST:event_comboCategoryItemStateChanged

    private void btnSaveCaseActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSaveCaseActionPerformed
    {//GEN-HEADEREND:event_btnSaveCaseActionPerformed
        if (txtCaseIdNr.getText().isEmpty())
        {
           saveNewCase(); 
        }
        else
        {
            saveUpdateCase();
        }
        
        
    }//GEN-LAST:event_btnSaveCaseActionPerformed

    private void btnCloseCaseWindowActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCloseCaseWindowActionPerformed
    {//GEN-HEADEREND:event_btnCloseCaseWindowActionPerformed
       dispose();
    }//GEN-LAST:event_btnCloseCaseWindowActionPerformed
    
    private void updateAssignedList()
    {
        String selected = comboCategory.getSelectedItem().toString();

        switch(selected)
        {
            case "Network":
            comboAssigned.setModel(new DefaultComboBoxModel<>(PersonalNetwork.values()));
            break;
            case "Security":
            comboAssigned.setModel(new DefaultComboBoxModel<>(PersonalSecurity.values()));
            break;
            case "Installation":
            comboAssigned.setModel(new DefaultComboBoxModel<>(PersonalInstallation.values()));
            break;
            case "Users":
            comboAssigned.setModel(new DefaultComboBoxModel<>(PersonalUsers.values()));
            break;
        } //End
        
        comboAssigned.insertItemAt("Not Assigned", 0);
        comboAssigned.setSelectedIndex(0);
    }
    
        //Metom som körs när användaren klickat på save case
    private void saveNewCase()
    { 
        
        caset = new Case();
        //DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        Date date = new Date();
        boolean verify = false;

        try
        {
            
        
            if (validateName())
            {
                if (validatePhoneNr())
                {
                    
                    
                    int selectedAssigned = comboAssigned.getSelectedIndex();
                    



                    JOptionPane.showMessageDialog(null, "Hi, its correct");
                    

                    
                    caset.setBestallareAnvNamn(userName);
                    caset.setBestallareFullNamn(fullName);
                    caset.setCaseDesc(txtDescription.getText());
                    caset.setKategori(comboCategory.getSelectedItem().toString());
                    caset.setSkapad(date);
                    caset.setAndrad(date);
                    caset.setTitel(txtTitle.getText());
                    caset.setTilldeladTill(comboAssigned.getSelectedItem().toString());
                    caset.setSkapadAv(txtFieldCreatedBy.getText());
                    caset.setPhoneNR(phoneNr);
                    caset.setCompName(txtComputerName.getText());
                    caset.setBeraknadTid(Integer.parseInt(txtFieldprelTime.getText()));
                    caset.setStatus(comboStatus.getSelectedItem().toString());
                    caset.setComments(txtComments.getText());
                    caset.setAvdelning(txtFieldAvd.getText());
                    caset.setTidsAtgang(Integer.parseInt(txtFieldTimeTaken.getText()));
                    
                   
                    
                    if (comboStatus.getSelectedItem().equals(Status.Assigned) && selectedAssigned == 0 )
                    {
                        throw new IllegalArgumentException("Please choose an assigne or change case status");
                        
                    }
                    else if (comboStatus.getSelectedItem().equals(Status.Closed) && txtsolution.getText().isEmpty() && txtFieldTimeTaken.getText().isEmpty())
                    {
                        throw new IllegalArgumentException("Please enter a solution");
                    }

                    try
                    {
                        
                        if (txtFieldCreatedBy.getText().isEmpty())
                        {
                            throw new IllegalArgumentException("Please enter who has created the case");
                        }
                        else
                        {
                            if (caset.addCase() == true)
                            {

                            }
                            else
                            {
                                throw new SQLException();
                            }
                        } //End inner if else verify textFieldCreatedBy
                        
                    } 
                    catch (SQLException | HeadlessException ex)
                    {
                        JOptionPane.showMessageDialog(this, "FEL!\n" + ex.getMessage());
                    }


                    
                    //verify = true;
                    
                    
                    dispose();
                }
              
                
                
            }//end if Validatename
            
           
        }
        catch (IllegalArgumentException argEx)
        {
            JOptionPane.showMessageDialog(this, argEx.getMessage());
        }
        //}while(!verify);
        
         
        
        
        
    }//Slut på metoden saveCase
    
    private void saveUpdateCase()
    {
        
        Date date = new Date();
        
        try
        {
             if (validateName())
            {
                if (validatePhoneNr())
                {
                    if (comboStatus.getSelectedItem().equals(Status.Closed) && txtsolution.getText().isEmpty() && txtFieldTimeTaken.getText().isEmpty())
                    {
                        throw new IllegalArgumentException("Please enter a solution and time taken");
                    }
                    else
                    {
                        
                        caset.setId(Integer.parseInt(txtCaseIdNr.getText()));
                        caset.setTitel(txtTitle.getText());
                        caset.setCaseDesc(txtDescription.getText());
                        caset.setAndrad(date);
                        caset.setStatus(comboStatus.getSelectedItem().toString());
                        caset.setPhoneNR(phoneNr);
                        caset.setCompName(txtComputerName.getText());
                        caset.setBeraknadTid(Integer.parseInt(txtFieldprelTime.getText()));
                        caset.setTidsAtgang(Integer.parseInt(txtFieldTimeTaken.getText()));
                        caset.setTilldeladTill(comboAssigned.getSelectedItem().toString());
                        caset.setAvdelning(txtFieldAvd.getText());
                        
                        caset.updateCase();
                        
                        {
                            dispose();
                        }
                        
                    }
                    
                }
            }
             else
                 throw  new Exception("There was an error");
            
            
        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        
        
    }

    
 
    
     private boolean validateName()
        {
            userName = txtUserName.getText();
            fullName = txtFullName.getText();
            avdelning = txtFieldAvd.getText();
            userName = userName.trim();
            fullName = fullName.trim();
            
            
            if (userName.isEmpty() || userName.matches("-?\\d+(\\.\\d+)?"))
            {
                JOptionPane.showMessageDialog(null, "Wrong input");
                return false;
            }
            else if (fullName.isEmpty() || fullName.matches("-?\\d+(\\.\\d+)?"))
            {
                JOptionPane.showMessageDialog(null, "Wrong fullname");
                return false;
            }
            else if (avdelning.isEmpty() || avdelning.matches("-?\\d+(\\.\\d+)?"))
            {
                JOptionPane.showMessageDialog(null, "Wrong department");
                return false;
            }
            else
                return true;
        } //End method validateName
     
     private boolean validatePhoneNr()
     {
        phoneNr = txtphone.getText();
        phoneNr = phoneNr.trim();
        
        boolean success;
        
         try
         {
             int temp = Integer.parseInt(phoneNr);
             success = true;
         } catch (NumberFormatException numE)
         {
             JOptionPane.showMessageDialog(null, "Verify phone number.", "INPUT ERROR", JOptionPane.ERROR_MESSAGE);
             success = false;
         }
         
         return success;
     }
     
     public void openCase()
     {
         try
         {
            caset = new Case();
            caset.setId(getCaseID());
          
            caset.openCase();
            txtCaseIdNr.setText(Integer.toString(getCaseID()));
            txtTitle.setText(caset.getTitel());
            txtDescription.setText(caset.getCaseDesc());
            comboStatus.setSelectedItem(Status.valueOf(caset.getStatus()));
            txtFieldCreatedBy.setText(caset.getSkapadAv());
            txtFullName.setText(caset.getBestallareFullNamn());
            txtUserName.setText(caset.getBestallareAnvNamn());
            txtphone.setText(caset.getPhoneNR());
            txtComputerName.setText(caset.getCompName());
            txtFieldprelTime.setText(Integer.toString(caset.getBeraknadTid()));
            txtFieldAvd.setText(caset.getAvdelning());
            txtCreateDate.setText(caset.getSkapad().toString());
            txtTimeChanged.setText(caset.getAndrad().toString());
            comboCategory.setSelectedItem(Kompetens.valueOf(caset.getKategori()));
            
            Kompetens tempKomp = Kompetens.valueOf(caset.getKategori());
            
            if (!caset.getTilldeladTill().equals("Not Assigned"))
            {
                switch(tempKomp)
                {
                    case Installation:

                        comboAssigned.setSelectedItem(PersonalInstallation.valueOf(caset.getTilldeladTill()));
                        break;
                    case Network:
                        comboAssigned.setSelectedItem(PersonalNetwork.valueOf(caset.getTilldeladTill()));
                        break;
                    case Security:
                        comboAssigned.setSelectedItem(PersonalSecurity.valueOf(caset.getTilldeladTill()));
                        break;
                    case Users:
                        comboAssigned.setSelectedItem(PersonalUsers.valueOf(caset.getTilldeladTill()));
                        break;

                }
            }
            
            
            
            if (comboStatus.getSelectedItem().equals(Status.Closed))
            {
                txtFieldTimeTaken.setText(Integer.toString(caset.getTidsAtgang()));
                txtsolution.setText(caset.getSolution());
            }
            
            
            
            
            
         } 
         catch (Exception e)
         {
             JOptionPane.showMessageDialog(this, e.getMessage());
         }
         
         
         
     }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                NewJDialog dialog = new NewJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter()
                {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e)
                    {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCloseCaseWindow;
    private javax.swing.JButton btnSaveCase;
    private javax.swing.JComboBox comboAssigned;
    private javax.swing.JComboBox comboBoxCity;
    private javax.swing.JComboBox comboCategory;
    private javax.swing.JComboBox comboStatus;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblAssignedTo;
    private javax.swing.JLabel lblCaseId;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JLabel lblChanged;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblComputerName;
    private javax.swing.JLabel lblCreated;
    private javax.swing.JLabel lblCreatedBy;
    private javax.swing.JLabel lblDepartment;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblPrefhours;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTakenHours;
    private javax.swing.JLabel lblTimeTaken;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblprefTime;
    private javax.swing.JList listWorkTask;
    private javax.swing.JPanel panelCaseProperties;
    private javax.swing.JPanel panelCaseRequest;
    private javax.swing.JPanel panelComments;
    private javax.swing.JPanel panelRequesterInfo;
    private javax.swing.JPanel panelSaveAndClose;
    private javax.swing.JPanel panelSolution;
    private javax.swing.JPanel panelTimeInfo;
    private javax.swing.JPanel panelWorkTask;
    private javax.swing.JScrollPane paneltextAreDesc;
    private javax.swing.JTextField txtCaseIdNr;
    private javax.swing.JTextArea txtComments;
    private javax.swing.JTextField txtComputerName;
    private javax.swing.JTextField txtCreateDate;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtFieldAvd;
    private javax.swing.JTextField txtFieldCreatedBy;
    private javax.swing.JTextField txtFieldTimeTaken;
    private javax.swing.JTextField txtFieldprelTime;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JTextField txtTimeChanged;
    private javax.swing.JTextField txtTitle;
    private javax.swing.JTextField txtUserName;
    private javax.swing.JTextField txtphone;
    private javax.swing.JTextArea txtsolution;
    private javax.swing.JScrollPane workTaskList;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the caseID
     */
    public int getCaseID()
    {
        return caseID;
    }

    /**
     * @param caseID the caseID to set
     */
    public void setCaseID(int caseID)
    {
        this.caseID = caseID;
    }
}
